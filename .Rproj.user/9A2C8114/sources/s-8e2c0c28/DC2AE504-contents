#data
ref_genome <- "hg38" #choose from mm9, mm10, hg19, hg38
org <- if(ref_genome %in% c("hg38","hg19")){
  "Hs"
}else if(ref_genome %in% c("mm10","mm9")){
  "Mm"
}else{
  print("No appropriate reference genome chosen")
}
#select target regions
targets <- "LTR5_Hs"
fantom <- file.path(file.path(getwd(),"reference_data", "fantom", paste0("fantom_",ref_genome, ".bed.gz")))
repeats <- file.path(getwd(),"reference_data", "repeats", paste0("repeats_",ref_genome, ".txt.gz"))
#whitelist should be text input of genes
whitelist <- NULL
#blacklist should be text input of repeat classes
blacklist <- NULL

#libraries
library(shiny)
library(Repguide)
library(paste0("org.", org,".eg.db"),character.only = TRUE)
#get appropriate reference genome
BS_genome <- BSgenome::getBSgenome(genome = ref_genome)
#get appropriate txdb file
txdb_objects <- grep(pattern = "^TxDb", x = rownames(installed.packages()), value = TRUE)
txdb_objects <- as.data.frame(sapply(txdb_objects, function(x)unlist(strsplit(x,".", fixed=TRUE))))
txdb <- colnames(txdb_objects[,txdb_objects[4,]==ref_genome, drop=FALSE])
library(txdb, character.only = TRUE)

#inputId ="factor, label= "Chosse the appropriate reference genome"
gs <- createGuideSet(genome=BS_genome,
                     alt_chromosomes = FALSE, 
                     tes = repeats,
                     temp = tempdir(),            # Directory for temporary files
                     cis = fantom, 
                     blacklist = blacklist, 
                     whitelist = whitelist, 
                     n_cores = 5, 
                     refdir = "", 
                     seed = 19)

gs <- createGuideSet(genome=BS_genome,
                     alt_chromosomes = input$alt_chromosomes, 
                     tes = input$repeats,
                     temp = tempdir(),            # Directory for temporary files
                     cis = input$fantom, 
                     blacklist = input$blacklist, 
                     whitelist = input$whitelist, 
                     n_cores = 5, 
                     refdir = "", 
                     seed = 19)
#add targets
gs <- addTargets(gs, targets = targets, force=TRUE)

gs <- addTargets(gs, targets = input$targets, force=TRUE)

#plot targets
server <- function(input, output){
  gs <- createGuideSet(genome=BS_genome,
                       alt_chromosomes = input$alt_chromosomes, 
                       tes = input$repeats,
                       temp = tempdir(),            # Directory for temporary files
                       cis = input$fantom, 
                       blacklist = input$blacklist, 
                       whitelist = input$whitelist, 
                       n_cores = 5, 
                       refdir = "", 
                       seed = 19)
  
  output$targets <- renderPlot({
    plotTargets(gs)
  })

}
plotOutput("targets")
