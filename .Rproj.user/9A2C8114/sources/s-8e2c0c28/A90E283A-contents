#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
#libraries
library(shiny)
library(Repguide)
library(BSgenome.Hsapiens.UCSC.hg19)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(org.Hs.eg.db)

#paths
additional.dir <- "/home/heyj/c010-datasets/Internal/LTR/guideDesign/"

#data
fantom5_hg19_gr <- readRDS(file.path(additional.dir, "Workspaces_David", "FANTOM5_gr.RDS"))
repeats_path <- file.path(additional.dir, "data", "hg19_repeats")

#inputId ="factor, label= "Chosse the appropriate reference genome"
gs <- createGuideSet(genome=BSgenome.Hsapiens.UCSC.hg19,
                     alt_chromosomes = FALSE, 
                     tes = repeats_path,
                     cis = fantom5_hg19_gr, 
                     blacklist = NULL, 
                     whitelist = NULL, 
                     temp = NULL,
                     n_cores = 5, 
                     refdir = "", 
                     seed = 19)
# Define UI for application that draws a histogram
ui <- fluidPage(

    # Application title
    titlePanel("Repguide - design of guideRNAs for CRISPR/dCas9 targeting of repetitive DNA sequences"),

    # Sidebar with a slider input for number of bins 
    sidebarLayout(
        sidebarPanel(
            sliderInput("bins",
                        "Number of bins:",
                        min = 1,
                        max = 50,
                        value = 30)
        ),

        # Show a plot of the generated distribution
        mainPanel(
           plotOutput("distPlot")
        )
    )
)

# Define server logic required to draw a histogram
server <- function(input, output) {

    output$distPlot <- renderPlot({
        # generate bins based on input$bins from ui.R
        x    <- faithful[, 2]
        bins <- seq(min(x), max(x), length.out = input$bins + 1)

        # draw the histogram with the specified number of bins
        hist(x, breaks = bins, col = 'darkgray', border = 'white')
    })
}

# Run the application 
shinyApp(ui = ui, server = server)
